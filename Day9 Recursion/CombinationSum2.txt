class Solution {
public:
    void f(int index,int target,vector<int>&ds,vector<vector<int>>&ans,vector<int> candidates)
    {if(target==0)
    {ans.push_back(ds);
    return ;}
     
     for(int i=index;i<candidates.size();i++)
        { if(i!=index && candidates[i]==candidates[i-1])
         continue;
     
         if(candidates[i]>target)
         break;
         ds.push_back(candidates[i]);
         f(i+1,target-candidates[i],ds,ans,candidates);
         ds.pop_back();
        }
    

    
    }
    
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        sort(candidates.begin(),candidates.end());
        int index=0;
        vector<vector<int>>ans;
        vector<int>ds;
        f(index,target,ds,ans,candidates);
        return ans;
    }
};